{
  "GET /api": {
    "description": "serves up a json representation of all the available endpoints of the api"
  },
  "GET /api/topics": {
    "description": "serves an array of all topics",
    "queries": [],
    "exampleResponse": {
      "topics": [
        {
          "slug": "football",
          "description": "Footie!"
        }
      ]
    }
  },
  "GET /api/articles": {
    "description": "serves an array of all articles",
    "queries": [
      "author",
      "topic",
      "sort_by",
      "order",
      "limit",
      "p"
    ],
    "requestFormat": "topic query (filter by topic) must provide an existing topic. sort_by query can sort on columns title, author, created_at, votes or comment_count. order can be ASC or DESC. limit query limits the number of lines returned and must be an integer. limit defaults to 10. p query specifies which page of results will be returned. p must be an integer and defaults to 1.",
    "exampleResponse": {
      "articles": [
        {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0,
          "comment_count": 6
        }
      ]
    }
  },
  "POST /api/articles": {
    "description": "posts a new article",
    "queries": [],
    "exampleResponse": {
      "article": {
          "title": "Seafood substitutions are increasing",
          "topic": "cooking",
          "author": "weegembump",
          "body": "Text from the article..",
          "created_at": "2018-05-30T15:59:13.341Z",
          "votes": 0, 
          "comment_count": 0
        }
    }
  },
  "GET /api/articles/:article_id": {
    "description": "gets an article by its id",
    "queries": [],
    "exampleResponse": {
      "article": {
        "title": "Seafood substitutions are increasing",
        "topic": "cooking",
        "author": "weegembump",
        "body": "Text from the article..",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 0,
        "comment_count": 6
      }
    }
  },
  "PATCH /api/articles/:article_id": {
    "description": "increases or decreases the votes for a specified article and responds with the updated object.",
    "queries": [],
    "requestFormat": "an object containing the key inc_votes and a value representing the value by which the votes should be increased. e.g. {inc_votes: 1} will increase the votes by one, {inc_votes: -10} will decrease the votes by 10.",
    "exampleResponse": {
      "article": {
        "title": "Seafood substitutions are increasing",
        "topic": "cooking",
        "author": "weegembump",
        "body": "Text from the article..",
        "created_at": "2018-05-30T15:59:13.341Z",
        "votes": 0,
        "comment_count": 6
      }
    }
  },
  "GET /api/articles/:article_id/comments": {
    "description": "serves an array of all comments for a specified article, with most recent comments first",
    "queries": [
      "limit",
      "p"
    ],
    "requestFormat": "limit query limits the number of lines returned and must be an integer. limit defaults to 10. p query specifies which page of results will be returned. p must be an integer and defaults to 1.",
    "exampleResponse": {
      "comments": [
        {
          "comment_id": "1",
          "body": "Oh, I've got compassion running out of my nose, pal! I'm the Sultan of Sentiment!",
          "article_id": "9",
          "author": "butter_bridge",
          "votes": "14",
          "created_at": "2020-04-06T13:17:001Z"
        }
      ]
    }
  },
  "POST /api/articles/:article_id/comments": {
    "description": "posts a comment for a spcific article",
    "queries": [],
    "exampleResponse": {
      "comment": {
        "username": "fluffy_sheep",
        "body": "This article is the best."
      }
    }
  },
  "GET /api/users": {
    "description": "serves an array of all users",
    "queries": [],
    "exampleResponse": {
      "users": [
        {
          "username": "fluffy_sheep",
          "name": "Euros",
          "avatar_url": "https://avatars2.githubusercontent.com/u/24604688?s=460&v=4"
        }
      ]
    }
  },
  "GET /api/users/:username": {
    "description": "serves a user object matching the specified username",
    "queries": [],
    "exampleResponse": {
      "user": {
        "username": "fluffy_sheep",
        "name": "Euros",
        "avatar_url": "https://avatars2.githubusercontent.com/u/24604688?s=460&v=4"
      }
    }
  },
  "PATCH /api/comments/:comment_id": {
    "description": "increases or decreases the votes for a specified comment and responds with the updated object.",
    "queries": [],
    "requestFormat": "an object containing the key inc_votes and a value representing the value by which the votes should be increased. e.g. {inc_votes: 1} will increase the votes by one, {inc_votes: -10} will decrease the votes by 10.",
    "exampleResponse": {
      "comment": {
        "body": "Oh, I've got compassion running out of my nose, pal! I'm the Sultan of Sentiment!",
        "votes": 16,
        "author": "butter_bridge",
        "article_id": 9,
        "created_at": 1586179020000
      }
    }
  },
  "DELETE /api/comments/:comment_id": {
    "description": "deletes a specified comment",
    "queries": [],
    "exampleResponse": {}
  }
}